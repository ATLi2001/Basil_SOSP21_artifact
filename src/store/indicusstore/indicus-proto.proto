syntax = "proto2";

import "store/common/common-proto.proto";

package indicusstore.proto;

message SignedMessage {
  required string msg = 1;
  required string type = 2;
  required uint64 process_id = 3;
  required bytes signature = 4;
}

message SignedMessages {
  repeated SignedMessage msgs = 1;
}

message Read {
  required uint64 req_id = 1;
  required string key = 2;
}

message SignedRead {
  required Read read = 1;
  required uint64 client_id = 2;
  required bytes signature = 3;
}

message Version {
  required TimestampMessage timestamp = 1;
  required uint64 clientid = 2;
}

message WriteProof {
  // TODO merkel tree could make more efficient
  required TransactionMessage write_txn = 1;
  required Version write_txn_version = 2;
  required Prepare3 prepare3 = 3;
}

message ReadReply {
  required uint64 req_id = 1;
  required int32 status = 2;
  required string key = 3;
  optional string value = 4;
  optional Version version = 5;
  optional WriteProof proof = 6;
}

message SignedReadReply {
  required ReadReply read_reply = 1;
  required uint64 replica_id = 2;
  required bytes signature = 3;
}

message Prepare1 {
  required uint64 req_id = 1;
  required uint64 txn_id = 2;
  required TransactionMessage txn = 3;
  optional TimestampMessage timestamp = 4;
}

message Prepare1Reply {
  required uint64 req_id = 1;
  // 0 = OK
  // -1 = failed
  // -2 = retry
  // -3 = abstain/no reply
  required int32 status = 2;
  optional TimestampMessage timestamp = 3;
  optional bytes txn_digest = 4;
}

message Prepare1Replies {
  repeated Prepare1Reply replies = 1;
}

message SignedPrepare1Reply {
  required Prepare1Reply p1_reply = 1;
  required uint64 replica_id = 2;
  required bytes signature = 3;
}

enum TxnAction {
  COMMIT = 0;
  ABORT = 1;
}

message Prepare2 {
  required TxnAction action = 1;
  required bytes txn_digest = 2;
  oneof p1_replies_oneof {
    Prepare1Replies p1_replies = 3;
    SignedMessages signed_p1_replies = 4;
  }
}

message SignedP2 {
  required Prepare2 prepare2 = 1;
  required uint64 client_id = 2;
  required bytes signature = 3;
}

message Prepare2Reply {
  required TxnAction action = 1;
  required bytes txdigest = 2;
}

message SignedPrepare2Reply {
  required Prepare2Reply p2_reply = 1;
  required uint64 replica_id = 2;
  required bytes signature = 3;
}

message Prepare3 {
  repeated SignedPrepare2Reply p2_replies = 1;
}

message Prepare3Reply {
  required TxnAction action = 1;
  required bytes txn_digest = 2;
}

message SignedPrepare3Reply {
  required Prepare3Reply p3_reply = 1;
  required uint64 replica_id = 2;
  required bytes signature = 3;
}

message Commit {
  required uint64 req_id = 1;
  required uint64 timestamp = 2;
}

message Abort {
  required uint64 req_id = 1;
  required TransactionMessage txn = 2;
}
