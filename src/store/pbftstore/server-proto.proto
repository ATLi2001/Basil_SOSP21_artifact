syntax = "proto2";

import "store/common/common-proto.proto";
import "store/pbftstore/pbft-proto.proto";

package pbftstore.proto;

message Read {
  required uint64 req_id = 1;
  required bytes key = 2;
  required TimestampMessage timestamp = 3;
}

message GroupedSignedCommits {
  map<uint64, SignedMessage> commits = 1;
}

message GroupedCommits {
  map<uint64, Commit> commits = 1;
}

message CommitProof {
  // The key,value pair must be in the txn's write set
  required TransactionMessage txn = 1;
  // and there should be 2f+1 unique commit messages
  // with the txn's digest
  oneof commits_oneof {
    GroupedCommits commits = 2;
    GroupedSignedCommits signed_commits = 3;
  }
}

message ReadReply {
  required uint64 req_id = 1;
  required int32 status = 2;
  required bytes key = 3;
  optional bytes value = 4;
  // The proof that the value was actually committed
  // Could still be stale though (i.e. not most recent)
  optional CommitProof commit_proof = 5;
}

// This is the request sent to the replication layer
message Transaction {
    repeated ReadMessage readset = 1;
    repeated WriteMessage writeset = 2;
    required TimestampMessage timestamp = 3;
}
