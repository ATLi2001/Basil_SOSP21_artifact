syntax = "proto2";

import "store/common/common-proto.proto";

package janusstore.proto;


// TODO do we need TimestampMessage?
// TODO lots of types of messages with repeated fields - worth refactoring
// or keep seperate for clarity?

message GetMessage {
    required string key = 1;
}

message BallotMessage {
    required TransactionMessage txn = 1;
    required uint64 ballot = 2;
}

message PreAcceptMessage {
    required BallotMessage = 1;
}

message PreAcceptOKMessage {
    required DependencyList dep = 1;
}

message AcceptMessage {
    required BallotMessage txn = 1;
    required DependencyList dep = 2;
}

message CommitMessage {
    required TransactionMessage txn = 1;
    required DependencyList dep = 2;
}

message CommitOKMessage {
    required bool abandon = 1;
    required bool result = 1;
}

message PrepareMessage {
    required BallotMessage = 1;
}

message PrepareOKMessage {
    required BallotMessage = 1;
    required DependencyList dep = 2;
}

message DependencyList {
    repeated TransactionMessage txn = 1;
}

message Request {
     enum Operation {
          GET = 1;
          PREACCEPT = 2;
          ACCEPT = 3;
          COMMIT = 5;
          PREPARE = 4;
     }
     required Operation op = 1;
     required uint64 txnid = 2;
     optional GetMessage get = 3;
     optional PreAcceptMessage preaccept = 4;
     optional AcceptMessage accept = 5;
     optional CommitMessage commit = 6;
     optional PrepareMessage prepare = 7;
}

message Reply {
     enum Operation {
          GET = 1; // use value
          PREACCEPT_OK = 2;
          ACCEPT_OK = 3; // contains no message
          COMMIT_OK = 4;
          PREPARE_OK = 5;
     }
     required Operation op = 1;
     optional string value = 2;
     optional PreAcceptOKMessage preaccept_ok = 3;
     optional CommitOKMessage commit_ok = 4;
     optional PrepareOKMessage prepare_ok = 5;
}
